@use '~@angular/material' as mat;
@import "palette.scss";

// primary, accent, warn
$default-legend-theme-primary: $gv-label;
$default-legend-theme-accent: mat.define-palette(mat.$orange-palette, A200, A100, A400);
$default-legend-theme-warn: mat.define-palette(mat.$red-palette);

$default-legend-theme: mat.define-light-theme($default-legend-theme-primary, $default-legend-theme-accent, $default-legend-theme-warn);

@mixin default-legend-theme-mixin($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

  .legend-view-container {
    background: #ffffff;

    .label {
      color: mat.get-color-from-palette($primary, gvLabel);
    }

    .graphic-variable-legend {
      color: mat.get-color-from-palette($primary, legendText);

      .label {
        color: mat.get-color-from-palette($primary, legendText);
      }

      .legend-row .mark {
        .circle, .rectangle {
          border-color: mat.get-color-from-palette($primary, legendText) !important;
        }
      }
    }

    .mat-icon {
      color: mat.get-color-from-palette($primary, legendIconColor3);

      .svg-color-ellipse1 {
        fill: mat.get-color-from-palette($primary, legendIconColor1);
      }

      .svg-color-ellipse2 {
        fill: mat.get-color-from-palette($primary, legendIconColor2);
      }

      .svg-color-ellipse3 {
        fill: mat.get-color-from-palette($primary, legendIconColor3);
      }
    }
  }
}

@include mat.all-component-themes($default-legend-theme);

.default-legend-theme {
  @include mat.all-component-themes($default-legend-theme);
  @include default-legend-theme-mixin($default-legend-theme);
}
